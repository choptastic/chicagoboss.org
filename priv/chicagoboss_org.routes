% vim: ts=4 sw=4 et ft=erlang
% Routes file.

% Formats: 
%   {"/some/route", [{controller, "Controller"}, {action, "Action"}]}.
%   {"/some/route", [{controller, "Controller"}, {action, "Action"}, {id, "42"}]}.
%   {"/(some|any)/route/(\\d+)", [{controller, '$1'}, {action, "Action"}, {id, '$2'}]}.
%   {"/some/route/(?<route_id>\\d+)", [{controller, "Controller"}, {action, "Action"}, {id, '$route_id'}]}.
%   {"/some/route", [{application, some_app}, {controller, "Controller"}, {action, "Action"}, {id, "42"}]}.
%
%   {404, [{controller, "Controller"}, {action, "Action"}]}.
%   {404, [{controller, "Controller"}, {action, "Action"}, {id, "42"}]}.
%   {404, [{application, some_app}, {controller, "Controller"}, {action, "Action"}, {id, "42"}]}.
%
% Note that routing across applications results in a 302 redirect.

% Front page
{"/", [{controller, "main"}, {action, "index"}]}.

%% Main page files get passed to the 'main' controller, with the captured url being used as the action.
{"/(index|documentation|download|contact|about|community)(?:\\.html?)?", [{controller, "main"}, {action, '$1'}]}.

%% API Documentation.  Always use the 'api' controller and the 'api' action.
%We're capturing which file was actually requested, and passing that to the
%controller, which will be used to load the requested view.
{"/api/([\\w-]+)(?:\\.html?)?", [{controller, "api"}, {action, "api"}, {view, '$1'}]}.

% 404 File Not Found handler
% {404, [{controller, "world"}, {action, "lost"}]}.

% 500 Internal Error handler (only invoked in production)
% {500, [{controller, "world"}, {action, "calamity"}]}.
